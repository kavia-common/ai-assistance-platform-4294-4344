{"is_source_file": true, "format": "JavaScript", "description": "This file contains API client functions for a web application, including a fetch helper with retry logic, and functions to check system health and post chat messages to a backend API.", "external_files": ["../config"], "external_methods": ["getApiBase"], "published": ["getHealth", "postChat"], "classes": [], "methods": [{"name": "fetchWithRetry(path, options = {}, retries = 1, backoffMs = 400)", "description": "Performs an HTTP fetch with retries on network errors and specific server error status codes (502, 503, 504). Handles content type parsing and error propagation.", "scope": "", "scopeKind": ""}, {"name": "getHealth()", "description": "Checks the health of the API server by calling the /api/health endpoint and returns 'ok' or 'unavailable'.", "scope": "", "scopeKind": ""}, {"name": "postChat({ messages = [], prompt = '' } = {})", "description": "Posts chat messages to the /api/chat endpoint, normalizes the response to extract role and content, and returns this data.", "scope": "", "scopeKind": ""}], "calls": ["fetchWithRetry", "getApiBase", "fetch"], "search-terms": ["api client", "fetch helper", "retry logic", "health check", "chat post", "react frontend"], "state": 2, "file_id": 14, "knowledge_revision": 91, "git_revision": "c9efc030b4a5336a9b2c666f69ffa7c2d000df4d", "revision_history": [{"30": ""}, {"45": "853d93b9aa81938361fdb7a8800da9fa71e128d7"}, {"48": "853d93b9aa81938361fdb7a8800da9fa71e128d7"}, {"55": "b9685751b9a2214be86f086cff62c176a5522f86"}, {"58": "1b82285cc7022fd2103d629b0989abb85e3e653a"}, {"59": "1b82285cc7022fd2103d629b0989abb85e3e653a"}, {"61": "9a4fbcbedbc163dc6e8013a6fa5989ec548e14c7"}, {"65": "8874ca3effdfecf41b01b42d93d2a33ba7e52a4b"}, {"69": "9d37e7faacd877519a151ac3a3c272637e0eaa38"}, {"72": "e6a65880277318dc2e5c1c87803ba6f7c02c3b95"}, {"80": "4b8799cefdd73c97236b9ea3e44c2080f8b51dcb"}, {"91": "c9efc030b4a5336a9b2c666f69ffa7c2d000df4d"}], "ctags": [{"_type": "tag", "name": "apiBase", "path": "/home/kavia/workspace/code-generation/ai-assistance-platform-4294-4344/react_frontend/src/api/client.js", "pattern": "/^      e.context = { where: 'getHealth', apiBase: getApiBase() };$/", "language": "JavaScript", "kind": "property", "scope": "e.context", "scopeKind": "class"}, {"_type": "tag", "name": "context", "path": "/home/kavia/workspace/code-generation/ai-assistance-platform-4294-4344/react_frontend/src/api/client.js", "pattern": "/^      e.context = { where: 'getHealth', apiBase: getApiBase() };$/", "language": "JavaScript", "kind": "class", "scope": "e", "scopeKind": "class"}, {"_type": "tag", "name": "fetchWithRetry", "path": "/home/kavia/workspace/code-generation/ai-assistance-platform-4294-4344/react_frontend/src/api/client.js", "pattern": "/^async function fetchWithRetry(path, options = {}, retries = 1, backoffMs = 400) {$/", "language": "JavaScript", "kind": "function", "signature": "(path, options = {}, retries = 1, backoffMs = 400)"}, {"_type": "tag", "name": "getHealth", "path": "/home/kavia/workspace/code-generation/ai-assistance-platform-4294-4344/react_frontend/src/api/client.js", "pattern": "/^export async function getHealth() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "postChat", "path": "/home/kavia/workspace/code-generation/ai-assistance-platform-4294-4344/react_frontend/src/api/client.js", "pattern": "/^export async function postChat({ messages = [], prompt = '' } = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "({ messages = [], prompt = '' } = {})"}, {"_type": "tag", "name": "where", "path": "/home/kavia/workspace/code-generation/ai-assistance-platform-4294-4344/react_frontend/src/api/client.js", "pattern": "/^      e.context = { where: 'getHealth', apiBase: getApiBase() };$/", "language": "JavaScript", "kind": "property", "scope": "e.context", "scopeKind": "class"}], "hash": "fcf4dbb20ec9a29b909449ebc0309601", "format-version": 4, "code-base-name": "react_frontend", "filename": "react_frontend/src/api/client.js", "fields": [{"name": "e.context = { where: 'getHealth', apiBase: getApiBase() };", "scope": "e.context", "scopeKind": "class", "description": "unavailable"}]}